{
    "scopeName": "xml-block.injection",
    "injectionSelector": "R:comment.block.cpp",
    "patterns": [
        {
            "include": "#generatedblock"
        }
    ],
    "repository": {
        "generatedblock": {
            "begin": "\\$\\w+\\$",
			"beginCaptures": {
				"0": {
					"name": "variable.language"
				}
			},
			"end": "\\$\\w+\\$",
			"endCaptures": {
				"0": {
					"name": "variable.language"
				}
			},
			"name": "support.function",
			"patterns": [
				{
					"include": "#xml"
				}
			]
        },
        "xmlheader": {
			"begin": "<?xml",
			"beginCaptures": {
				"0": {
					"name": "support.function"
				}
			},
			"end": "?>",
			"endCaptures": {
				"0": {
					"name": "support.function"
				}
			},
			"name": "support.function",
			"patterns": [
				{
					"include": "#value"
				}
			]
		},
		"xmlopen": {
			"begin": "<",
			"beginCaptures": {
				"0": {
					"name": "support.function"
				}
			},
			"end": ">",
			"endCaptures": {
				"0": {
					"name": "support.function"
				}
			},
			"name": "support.function",
			"patterns": [
				{
					"include": "#value"
				}
			]
		},
		"xmlclose": {
			"begin": "</",
			"beginCaptures": {
				"0": {
					"name": "support.function"
				}
			},
			"end": ">",
			"endCaptures": {
				"0": {
					"name": "support.function"
				}
			},
			"name": "support.function",
			"patterns": [
				{
					"include": "#value"
				}
			]
		},
		"xmlselfclose": {
			"begin": "<",
			"beginCaptures": {
				"0": {
					"name": "support.function"
				}
			},
			"end": "/>",
			"endCaptures": {
				"0": {
					"name": "support.function"
				}
			},
			"name": "support.function",
			"patterns": [
				{
					"include": "#value"
				}
			]
		},
		"xmlcomment": {
			"begin": "<!--",
			"beginCaptures": {
				"0": {
					"name": "comment"
				}
			},
			"end": "-->",
			"endCaptures": {
				"0": {
					"name": "comment"
				}
			},
			"name": "comment",
			"patterns": [
				{
					"include": "#stringcontent"
				}
			]
		},
        "xml": {
			"patterns": [
				{
					"include": "#xmlheader"
				},
				{
					"include": "#xmlopen"
				},
				{
					"include": "#xmlclose"
				},
				{
					"include": "#xmlselfclose"
				},
				{
					"include": "#xmlcomment"
				}
			]
        },
        "comments": {
			"patterns": [
				{
					"begin": "/\\*\\*(?!/)",
					"captures": {
						"0": {
							"name": "comment"
						}
					},
					"end": "\\*/",
					"name": "comment"
				},
				{
					"begin": "/\\*",
					"captures": {
						"0": {
							"name": "comment"
						}
					},
					"end": "\\*/",
					"name": "comment"
				},
				{
					"captures": {
						"1": {
							"name": "comment"
						}
					},
					"match": "(//).*$\\n?",
					"name": "comment"
				}
			]
		},
		"constant": {
			"match": "\\b(?:true|false|null)\\b",
			"name": "constant.language"
		},
		"number": {
			"match": "(?x)        # turn on extended mode\n  -?        # an optional minus\n  (?:\n    0       # a zero\n    |       # ...or...\n    [1-9]   # a 1-9 character\n    \\d*     # followed by zero or more digits\n  )\n  (?:\n    (?:\n      \\.    # a period\n      \\d+   # followed by one or more digits\n    )?\n    (?:\n      [eE]  # an e character\n      [+-]? # followed by an option +/-\n      \\d+   # followed by one or more digits\n    )?      # make exponent optional\n  )?        # make decimal portion optional",
			"name": "constant.numeric"
		},
		"string": {
			"begin": "\"",
			"beginCaptures": {
				"0": {
					"name": "string"
				}
			},
			"end": "\"",
			"endCaptures": {
				"0": {
					"name": "string"
				}
			},
			"name": "string",
			"patterns": [
				{
					"include": "#value"
				}
			]
		},
		"stringcontent": {
			"patterns": [
				{
					"match": "(?x)                # turn on extended mode\n  \\\\                # a literal backslash\n  (?:               # ...followed by...\n    [\"\\\\/bfnrt]     # one of these characters\n    |               # ...or...\n    u               # a u\n    [0-9a-fA-F]{4}) # and four hex digits",
					"name": "constant.character.escape"
				},
				{
					"match": "\\\\.",
					"name": "invalid"
				}
			]
        },
		"singlequotestring": {
			"begin": "'",
			"beginCaptures": {
				"0": {
					"name": "support.function"
				}
			},
			"end": "'",
			"endCaptures": {
				"0": {
					"name": "support.function"
				}
			},
			"name": "support.function",
			"patterns": [
				{
					"include": "#value"
				}
			]
        },
        "attribute": {
			"match": "(\\w+\\s*=)",
			"name": "keyword.operator"
		},
		"variableref": {
			"begin": "%",
			"beginCaptures": {
				"0": {
					"name": "constant.character.escape"
				}
			},
			"end": "%",
			"endCaptures": {
				"0": {
					"name": "constant.character.escape"
				}
			},
			"name": "constant.character.escape",
			"patterns": [
				{
					"include": "#stringcontent"
				}
			]
		},
        "value": {
			"patterns": [
				{
					"include": "#comments"
				},
				{
					"include": "#constant"
				},
				{
					"include": "#number"
				},
				{
					"include": "#string"
				},
				{
					"include": "#singlequotestring"
				},
				{
					"include": "#attribute"
				},
				{
					"include": "#variableref"
                },
                {
                    "include": "#stringcontent"	
                }
            ]
        }
    }
}