{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Gls",
	"scopeName": "source.gls",
	"patterns": [
		{
			"include": "#property"
		}
	],
	"repository": {
	"stringblock": {
			"begin": "#\\$STRING_START\\$#",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.list.begin.markdown"
				}
			},
			"end": "STRING_END\\$#",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.list.begin.markdown"
				}
			},
			"name": "punctuation.definition.list.begin.markdown",
			"patterns": [
				{
					"include": "#value"
				},
				{
					"include": "#blockcomment"
				},
				{
					"include": "#blockitemtype"
				},
				{
					"include": "#blocktype"
				},
				{
					"include": "#blockname"
				},
				{
					"include": "#blockisconst"
				},
				{
					"include": "#blockargs"
				},
				{
					"include": "#blockbody"
				},
				{
					"include": "#blockgenbody"
				},
				{
					"include": "#singlequotestring"
				},
				{
					"include": "#xml"
				},
				{
					"include": "#keyword"
				},
				{
					"include": "#cppcall"
				}
			]
		},
		"blockcomment": {
			"begin": "COMMENT\\$#",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.list.begin.markdown"
				}
			},
			"end": "#\\$",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.list.begin.markdown"
				}
			},
			"name": "comment.block.json",
			"patterns": [
				{
					"include": "#stringcontent"
				}
			]
		},
		"blockitemtype": {
			"begin": "ITEM_TYPE\\$#",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.list.begin.markdown"
				}
			},
			"end": "#\\$",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.list.begin.markdown"
				}
			},
			"name": "support.function",
			"patterns": [
				{
					"include": "#number"
				}
			]
		},
		"blockisconst": {
			"begin": "METHOD_IS_CONST\\$#",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.list.begin.markdown"
				}
			},
			"end": "#\\$",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.list.begin.markdown"
				}
			},
			"name": "support.function",
			"patterns": [
				{
					"include": "#number"
				}
			]
		},
		"blockppp": {
			"begin": "PPP\\$#",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.list.begin.markdown"
				}
			},
			"end": "#\\$",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.list.begin.markdown"
				}
			},
			"name": "support.function",
			"patterns": [
				{
					"include": "#number"
				}
			]
		},
		"blockgenbody": {
			"begin": "GEN_BODY\\$#",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.list.begin.markdown"
				}
			},
			"end": "#\\$",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.list.begin.markdown"
				}
			},
			"name": "support.function",
			"patterns": [
				{
					"include": "#number"
				}
			]
		},
		"blocktype": {
			"begin": "TYPE\\$#",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.list.begin.markdown"
				}
			},
			"end": "#\\$",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.list.begin.markdown"
				}
			},
			"name": "string",
			"patterns": [
				{
					"include": "#stringcontent"
				}
			]
		},
		"blockname": {
			"begin": "NAME\\$#",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.list.begin.markdown"
				}
			},
			"end": "#\\$",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.list.begin.markdown"
				}
			},
			"name": "string",
			"patterns": [
				{
					"include": "#stringcontent"
				}
			]
		},
		"blockargs": {
			"begin": "ARGS\\$#",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.list.begin.markdown"
				}
			},
			"end": "#\\$",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.list.begin.markdown"
				}
			},
			"name": "string",
			"patterns": [
				{
					"include": "#stringcontent"
				}
			]
		},
		"blockbody": {
			"begin": "BODY\\$#",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.list.begin.markdown"
				}
			},
			"end": "#\\$",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.list.begin.markdown"
				}
			},
			"name": "string",
			"patterns": [
				{
					"include": "#stringcontent"
				},
				{
					"include": "#comments"
				}
			]
		},
		"property": {
			"patterns": [
				{
					"include": "#propertyname"
				},
				{
					"include": "#value"
				}
			]
		},
		"propertyname": {
			"match": "(?<!\\S)(?!\\d)([\\w$]+)(?::)(?!:)",
			"name": "support.type.property-name"
		},
		"comments": {
			"patterns": [
				{
					"begin": "/\\*\\*(?!/)",
					"captures": {
						"0": {
							"name": "punctuation.definition.comment.json"
						}
					},
					"end": "\\*/",
					"name": "comment.block.documentation.json"
				},
				{
					"begin": "/\\*",
					"captures": {
						"0": {
							"name": "punctuation.definition.comment.json"
						}
					},
					"end": "\\*/",
					"name": "comment.block.json"
				},
				{
					"captures": {
						"1": {
							"name": "punctuation.definition.comment.json"
						}
					},
					"match": "(//).*$\\n?",
					"name": "comment.line.double-slash.js"
				}
			]
		},
		"constant": {
			"match": "\\b(?:true|false|null)\\b",
			"name": "constant.language.json"
		},
		"number": {
			"match": "(?x)        # turn on extended mode\n  -?        # an optional minus\n  (?:\n    0       # a zero\n    |       # ...or...\n    [1-9]   # a 1-9 character\n    \\d*     # followed by zero or more digits\n  )\n  (?:\n    (?:\n      \\.    # a period\n      \\d+   # followed by one or more digits\n    )?\n    (?:\n      [eE]  # an e character\n      [+-]? # followed by an option +/-\n      \\d+   # followed by one or more digits\n    )?      # make exponent optional\n  )?        # make decimal portion optional",
			"name": "constant.numeric.json"
		},
		"string": {
			"begin": "\"",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.string.begin.json"
				}
			},
			"end": "\"",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.string.end.json"
				}
			},
			"name": "string.quoted.double.json",
			"patterns": [
				{
					"include": "#stringcontent"
				}
			]
		},
		"stringcontent": {
			"patterns": [
				{
					"match": "(?x)                # turn on extended mode\n  \\\\                # a literal backslash\n  (?:               # ...followed by...\n    [\"\\\\/bfnrt]     # one of these characters\n    |               # ...or...\n    u               # a u\n    [0-9a-fA-F]{4}) # and four hex digits",
					"name": "constant.character.escape.json"
				},
				{
					"match": "\\\\.",
					"name": "invalid.illegal.unrecognized-string-escape.json"
				}
			]
		},
		"freename": {
			"match": "(?<![<>%&=$\"\\/.()])(?!.*[:<>%&=$\"\\/.()])(?!\\d)(\\w+)",
			"name": "support.class"		
		},
		"variable": {
			"match": "(\\w+=)",
			"name": "keyword.operator"
		},
		"variableref": {
			"begin": "%",
			"beginCaptures": {
				"0": {
					"name": "constant.character.escape"
				}
			},
			"end": "%",
			"endCaptures": {
				"0": {
					"name": "constant.character.escape"
				}
			},
			"name": "constant.character.escape",
			"patterns": [
				{
					"include": "#stringcontent"
				}
			]
		},
		"singlequotestring": {
			"begin": "'",
			"beginCaptures": {
				"0": {
					"name": "support.function"
				}
			},
			"end": "'",
			"endCaptures": {
				"0": {
					"name": "support.function"
				}
			},
			"name": "support.function",
			"patterns": [
				{
					"include": "#value"
				}
			]
		},
		"xmlheader": {
			"begin": "<?xml",
			"beginCaptures": {
				"0": {
					"name": "support.function"
				}
			},
			"end": "?>",
			"endCaptures": {
				"0": {
					"name": "support.function"
				}
			},
			"name": "support.function",
			"patterns": [
				{
					"include": "#value"
				},
				{
					"include": "#singlequotestring"
				}
			]
		},
		"xmlopen": {
			"begin": "<",
			"beginCaptures": {
				"0": {
					"name": "support.function"
				}
			},
			"end": ">",
			"endCaptures": {
				"0": {
					"name": "support.function"
				}
			},
			"name": "support.function",
			"patterns": [
				{
					"include": "#value"
				},
				{
					"include": "#singlequotestring"
				}
			]
		},
		"xmlclose": {
			"begin": "</",
			"beginCaptures": {
				"0": {
					"name": "support.function"
				}
			},
			"end": ">",
			"endCaptures": {
				"0": {
					"name": "support.function"
				}
			},
			"name": "support.function",
			"patterns": [
				{
					"include": "#value"
				},
				{
					"include": "#singlequotestring"
				}
			]
		},
		"xmlselfclose": {
			"begin": "<",
			"beginCaptures": {
				"0": {
					"name": "support.function"
				}
			},
			"end": "/>",
			"endCaptures": {
				"0": {
					"name": "support.function"
				}
			},
			"name": "support.function",
			"patterns": [
				{
					"include": "#value"
				},
				{
					"include": "#singlequotestring"
				}
			]
		},
		"xmlcomment":
		{
			"begin": "<!--",
			"beginCaptures": {
				"0": {
					"name": "comment.block.json"
				}
			},
			"end": "-->",
			"endCaptures": {
				"0": {
					"name": "comment.block.json"
				}
			},
			"name": "comment.block.json",
			"patterns": [
				{
					"include": "#stringcontent"
				}
			]
		},
		"templated": {
			"begin": "(\\w+)(<)",
			"beginCaptures": {
				"0": {
					"name": "keyword.operator"
				},
				"1": {
					"name": "support.class"
				}
			},
			"end": ">",
			"endCaptures": {
				"0": {
					"name": "keyword.operator"
				}
			},
			"name": "support.function",
			"patterns": [
				{
					"include": "#stringcontent"
				}
			]
		},
		"keyword": {
			"match": "(\\w+:)",
			"name": "keyword.operator"
		},
		"path": {
		},
		"pointer": {
		},
		"class": {
		},
		"method": {
		},
		"cppcall": {
			"patterns": [
				{
					"include": "#pointer"
				},
				{
					"include": "#class"
				},
				{
					"include": "#method"
				}
			]
		},
		"xml": {
			"patterns": [
				{
					"include": "#xmlheader"
				},
				{
					"include": "#xmlopen"
				},
				{
					"include": "#xmlclose"
				},
				{
					"include": "#xmlselfclose"
				},
				{
					"include": "#xmlcomment"
				}
			]
		},
		"value": {
			"patterns": [
				{
					"include": "#path"
				},
				{
					"include": "#variable"
				},
				{
					"include": "#variableref"
				},
				{
					"include": "#templated"
				},
				{
					"include": "#comments"
				},
				{
					"include": "#constant"
				},
				{
					"include": "#number"
				},
				{
					"include": "#string"
				},
				{
					"include": "#freename"
				},
				{
					"include": "#stringblock"
				}
			]
		}
	}
	
}